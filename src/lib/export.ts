import { EbookProject } from '@/lib/types';

export async function exportToPDF(project: EbookProject): Promise<void> {
  try {
    const doc = generateHTML(project);
    
    const printWindow = window.open('', '_blank');
    if (!printWindow) {
      throw new Error('Could not open print window');
    }

    printWindow.document.write(doc);
    printWindow.document.close();
    
    printWindow.focus();
    setTimeout(() => {
      printWindow.print();
    }, 500);
    
  } catch (error) {
    console.error('Export failed:', error);
    throw error;
  }
}

function generateHTML(project: EbookProject): string {
  const sortedChapters = [...project.chapters].sort((a, b) => a.order - b.order);
  
  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="UTF-8">
      <title>${project.title}</title>
      <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        
        * {
          margin: 0;
          padding: 0;
          box-sizing: border-box;
        }
        
        body {
          font-family: 'Inter', sans-serif;
          line-height: 1.6;
          color: #2c2c2c;
          background: white;
          font-size: 14px;
        }
        
        .container {
          max-width: 8.5in;
          margin: 0 auto;
          padding: 1in;
          min-height: 11in;
        }
        
        .title-page {
          text-align: center;
          margin-bottom: 2in;
          page-break-after: always;
        }
        
        .main-title {
          font-size: 2.5em;
          font-weight: 700;
          margin-bottom: 0.5em;
          color: #4c1d95;
        }
        
        .description {
          font-size: 1.2em;
          color: #6b7280;
          margin-bottom: 2em;
          max-width: 500px;
          margin-left: auto;
          margin-right: auto;
        }
        
        .chapter {
          margin-bottom: 2em;
          page-break-inside: avoid;
        }
        
        .chapter-title {
          font-size: 1.8em;
          font-weight: 600;
          margin-bottom: 1em;
          color: #4c1d95;
          border-bottom: 2px solid #e5e7eb;
          padding-bottom: 0.5em;
        }
        
        .chapter-number {
          font-size: 0.8em;
          color: #d97706;
          font-weight: 500;
          margin-bottom: 0.25em;
        }
        
        .chapter-content {
          font-size: 1em;
          line-height: 1.8;
          text-align: justify;
        }
        
        .chapter-content p {
          margin-bottom: 1em;
        }
        
        .footer {
          position: fixed;
          bottom: 0.5in;
          right: 1in;
          font-size: 0.8em;
          color: #9ca3af;
        }
        
        @media print {
          body {
            print-color-adjust: exact;
            -webkit-print-color-adjust: exact;
          }
          
          .container {
            margin: 0;
            padding: 0.75in;
          }
          
          .chapter {
            page-break-inside: avoid;
          }
          
          .chapter-title {
            page-break-after: avoid;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="title-page">
          <h1 class="main-title">${escapeHtml(project.title)}</h1>
          ${project.description ? `<p class="description">${escapeHtml(project.description)}</p>` : ''}
          <p style="margin-top: 2em; color: #9ca3af;">
            ${sortedChapters.length} Chapter${sortedChapters.length !== 1 ? 's' : ''} â€¢ 
            ${getTotalWordCount(project)} Words
          </p>
        </div>
        
        ${sortedChapters.map((chapter, index) => `
          <div class="chapter">
            <div class="chapter-number">Chapter ${index + 1}</div>
            <h2 class="chapter-title">${escapeHtml(chapter.title)}</h2>
            <div class="chapter-content">
              ${formatContent(chapter.content)}
            </div>
          </div>
        `).join('')}
      </div>
      
      <div class="footer">
        Generated by EbookCrafter
      </div>
    </body>
    </html>
  `;
}

function escapeHtml(text: string): string {
  const div = document.createElement('div');
  div.textContent = text;
  return div.innerHTML;
}

function formatContent(content: string): string {
  if (!content) return '<p><em>No content yet...</em></p>';
  
  return content
    .split('\n\n')
    .filter(paragraph => paragraph.trim())
    .map(paragraph => `<p>${escapeHtml(paragraph.trim())}</p>`)
    .join('');
}

function getTotalWordCount(project: EbookProject): number {
  return project.chapters.reduce((total, chapter) => {
    return total + (chapter.content?.split(/\s+/).filter(word => word.length > 0).length || 0);
  }, 0);
}